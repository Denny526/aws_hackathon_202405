AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  dennyawslambdabedrock01:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://denny-s3-bucket-for-lambda/d80c208feb77246b0177b63294860662
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - s3:*
          - s3-object-lambda:*
          Resource: '*'
        - Sid: BedrockAll
          Effect: Allow
          Action:
          - bedrock:*
          Resource: '*'
        - Sid: DescribeKey
          Effect: Allow
          Action:
          - kms:DescribeKey
          Resource: arn:*:kms:*:::*
        - Sid: APIsWithAllResourceAccess
          Effect: Allow
          Action:
          - iam:ListRoles
          - ec2:DescribeVpcs
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
          Resource: '*'
        - Sid: PassRoleToBedrock
          Effect: Allow
          Action:
          - iam:PassRole
          Resource: arn:aws:iam::*:role/*AmazonBedrock*
          Condition:
            StringEquals:
              iam:PassedToService:
              - bedrock.amazonaws.com
        - Effect: Allow
          Action:
          - cloudformation:DescribeStacks
          - cloudformation:ListStackResources
          - cloudwatch:ListMetrics
          - cloudwatch:GetMetricData
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - kms:ListAliases
          - iam:GetPolicy
          - iam:GetPolicyVersion
          - iam:GetRole
          - iam:GetRolePolicy
          - iam:ListAttachedRolePolicies
          - iam:ListRolePolicies
          - iam:ListRoles
          - lambda:*
          - logs:DescribeLogGroups
          - states:DescribeStateMachine
          - states:ListStateMachines
          - tag:GetResources
          - xray:GetTraceSummaries
          - xray:BatchGetTraces
          Resource: '*'
        - Effect: Allow
          Action:
          - iam:PassRole
          Resource: '*'
          Condition:
            StringEquals:
              iam:PassedToService: lambda.amazonaws.com
        - Effect: Allow
          Action:
          - logs:DescribeLogStreams
          - logs:GetLogEvents
          - logs:FilterLogEvents
          Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
    Metadata:
      SamResourceId: dennyawslambdabedrock01
